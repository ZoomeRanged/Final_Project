version: "3"

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    networks:
      - default_network
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=${ZOOKEEPER_ALLOW_ANONYMOUS_LOGIN:-yes}

  kafka:
    image: bitnami/kafka:3.1.2
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=${KAFKA_CFG_LISTENERS}
      - KAFKA_CFG_ADVERTISED_LISTENERS=${KAFKA_CFG_ADVERTISED_LISTENERS}
      - KAFKA_CFG_ZOOKEEPER_CONNECT=${KAFKA_CFG_ZOOKEEPER_CONNECT}
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  
  producer:
    build: ./producer
    restart: always
    environment:
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    command: ["sleep", "infinity"]
    
    volumes:
      - ./producer/main.py:/app/main.py
    depends_on:
      - kafka
  


  consumer:
    build: ./consumer
    restart: always
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_USER}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    command: ["sleep", "infinity"]
    
    volumes:
      - ./consumer/main.py:/app/main.python
    depends_on:
      - kafka
      

networks:
  default_network:
    name: default_network
 